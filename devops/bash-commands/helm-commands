# Instalação do helm
curl https://raw.githubusercontent.com/helm/helm/master/scripts/get | bash

# Inicializando o helm
helm init

# Aplicando todos os arquivos yaml
ls -1 | grep .yaml | while read line ; do kubectl apply -f  $line -n staging ; done

# Aplicando todas configuracao de serivce account e cluster role
kubectl apply -f tiller-all-config.yaml

# Criando patch com service account
kubectl patch deployment tiller-deploy -n kube-system  --patch "$(cat tiller-patch.yaml)"


# Também é possível inicilar o tiller com o service account
helm init --service-account tiller


# Instalando todos charts
helm install --namespace staging --name mysql ./mysql && helm install --namespace staging --name database ./database && helm install --namespace staging --name users ./users && helm install --namespace staging --name gateway ./gateway


# Criando chart pelo helm
helm create mysql


# Criando o nosso repositório de charts
helm install --name helm --namespace devops -f nome_do_arquivo.yaml

# Adicionando o repositório (Obs: cuidado com a barra invertida)
helm repo add poc-microservice http://$(kubectl get nodes --namespace devops -o jsonpath="{.items[0].status.addresses[0].address}"):30010



# Plugin para auxiliar a instalação o upload dos charts
helm plugin install https://github.com/chartmuseum/helm-push


# comando para subir para o repositório charts instalados
helm lint mysql && helm push mysql/ poc-microservice && helm lint database && helm push database/ poc-microservice && helm lint users && helm push users/ poc-microservice && helm lint gateway && helm push gateway/ poc-microservice


# Instalando de um repositório (no caso o local)
helm install poc-microservice/mysql --namespace staging --name mysql && helm install poc-microservice/database --namespace staging --name database && helm install poc-microservice/users --namespace=staging --name users && helm install poc-microservice/gateway --namespace staging --name gateway

# Atualizando com base em uma imagem
helm upgrade gateway poc-microservice/gateway --set image.tag=0.0.3

# Retornando uma versão do helm
helm rollback gateway 2
